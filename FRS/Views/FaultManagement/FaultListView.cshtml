@{
    var userDetails = ((FRS.Models.MyPrincipal)HttpContext.Current.User).User;
}

@if (userDetails.RoleID == 1 || userDetails.RoleID == 2)
{
    <div class="row form-group">
        <div class="col-md-6">
            <span>Fault Status:</span>
            @Html.DropDownList("FilterStatusID", ViewBag.FaultStatusList == null ? Enumerable.Empty<SelectListItem>() : new MultiSelectList(ViewBag.FaultStatusList, "Value", "Text", ViewBag.SelectedFaultStatusList), new { @class = "form-control chosen-select", @readonly = true, multiple = true })

            <button type="button" id="btnstatusfilter" class="btn btn-default">Apply Filter</button>
        </div>
        <div class="col-md-6 text-right">
            <button id="btnAddFault" type="button" class="btn btn-sm btn-primary">Add Fault Details</button>
        </div>
    </div>
}
else
{
    <div class="row form-group">
        <div class="col-md-6">
            <span>Fault Status:</span>
            @Html.DropDownList("FilterStatusID", ViewBag.FaultStatusList == null ? Enumerable.Empty<SelectListItem>() : new MultiSelectList(ViewBag.FaultStatusList, "Value", "Text", ViewBag.SelectedFaultStatusList), "--Select--", new { @class = "form-control chosen-select", @readonly = true, multiple = true })

            <button type="button" id="btnstatusfilter" class="btn btn-default">Apply Filter</button>
        </div>
    </div>
}
@if (userDetails.RoleID == 2)
{
    <table id="faultdetailsgrid" class="table table-bordered">
        <thead>
            <tr>
                <th>Request Number</th>
                <th>Fault Type</th>
                <th>Fault Description</th>
                <th>Product Name</th>
                <th>Status</th>
                <th>Reoprted Date</th>
                <th>Resolved Date</th>
                <th>Update/View</th>
            </tr>
        </thead>
    </table>
}
else
{
    <table id="faultdetailsgrid" class="table table-bordered">
        <thead>
            <tr>
                <th>Request Number</th>
                <th>Customer Name</th>
                <th>Fault Type</th>
                <th>Fault Description</th>
                <th>Product Name</th>
                <th>Status</th>
                <th>Reoprted Date</th>
                <th>Resolved Date</th>
                <th>Fault Priority</th>
                @if (userDetails.RoleID == 3 || userDetails.RoleID == 1)
                {
                    <th>Assigned User</th>
                }

                <th>Update/View</th>

                @if (userDetails.RoleID == 4)
                {
                    <th>Add Comment</th>
                }
            </tr>
        </thead>
    </table>
}




<div id="dvupdateaddfault" class="modal fade" role="dialog">
</div>

<script type="text/javascript">
    $(document).ready(function () {

        $(".chosen-select").chosen();

        $("#btnstatusfilter").click(function () {
            if ($("#FilterStatusID").val().length >0) {
                $("#faultdetailsgrid").DataTable().ajax.reload();
            }
            else {
                alert("Please select at least one status.");
            }

        });

        $(document).on("change", ".assigneduser", function () {
            var userid = $(this).val();
            var faultid = $(this).attr("data-faultid");
            $.ajax({
                url: '@Url.Action("AssignFault","FaultManagement")',
                type: 'GET',
                contentType: 'application/json',
                data: { "faultId": faultid, "userId": userid },
                success: function (data) {
                    if (data == true) {
                        alert("Developer assigned successfully to fault id:" + faultid);
                        $("#faultdetailsgrid").DataTable().ajax.reload();
                    }
                    else {
                        alert("Error occured while assigining the user to fault.");
                    }

                },
                error: function () {
                    alert("Error occured while assigining the user to fault.");
                }
            });
        });

        var columns = [];
        if ('@userDetails.RoleID' == '2') {
            columns = [
                { "data": "FaultID" },
                { "data": "FaultTypeDescription" },
                { "data": "FaultDescription" },
                { "data": "ProductName" },
                { "data": "StatusDescription", "searchable": false },
                { "data": "FaultReportingDate" },
                { "data": "FaultResolvedDate" },
                {
                    "data": null, render: function (data) {
                        if (data.StatusDescription == "Closed") {
                            return "<button class='btn btn-default btnview' data-faultid=" + data.FaultID + ">View</button>";
                        }
                        else {
                            return "<button class='btn btn-default btnupdate' data-faultid=" + data.FaultID + ">Update</button>";
                        }
                    }
                }
            ];

        }
        else {
            columns= [
            { "data": "FaultID" },
            { "data": "CustomerInfo.Name" },
            { "data": "FaultTypeDescription" },
            { "data": "FaultDescription" },
            { "data": "ProductName" },
            { "data": "StatusDescription", "searchable": false },
            { "data": "FaultReportingDate" },
            { "data": "FaultResolvedDate" },
            {
                "data": null,
                "render": function (data, type, row) {
                    //debugger;
                    if (data.FaultPriorityID == 1) {
                        return "<span>Minor</span>";
                    }
                    else if (data.FaultPriorityID == 2) {
                        return "<span>Major</span>";
                    }
                    else {
                        return "<span>NA</span>";
                    }
                }
            }
        ];

        if ('@userDetails.RoleID' == "1") {
            columns.push({ "data": "UserID" });

            columns.push({
                "data": null, render: function (data) {
                    if (data.StatusDescription == "Closed") {
                        return "<button class='btn btn-default btnview' data-faultid=" + data.FaultID + ">View</button>";
                    }
                    else {
                        return "<button class='btn btn-default btnupdate' data-faultid=" + data.FaultID + ">Update</button>";
                    }
                }
            });

        }
        else if ('@userDetails.RoleID' == "3") {
            columns.push({
                "data": null, render: function (data) {
                    var dropdown = "<select class='form-control assigneduser' data-faultid=" + data.FaultID + ">";
                    if (data.DeveloperList) {
                        dropdown = dropdown + "<option value=''>--Select--</option>"
                        for (var i = 0; i < data.DeveloperList.length; i++) {
                            if (data.AssignedUserID == data.DeveloperList[i].Value) {
                                dropdown = dropdown + "<option value=" + data.DeveloperList[i].Value + " selected>" + data.DeveloperList[i].Text + "</option>";
                            }
                            else {
                                dropdown = dropdown + "<option value=" + data.DeveloperList[i].Value + ">" + data.DeveloperList[i].Text + "</option>";
                            }

                        }
                    }
                    dropdown = dropdown + "</select>";
                    return dropdown;
                }
            });
            columns.push({
                "data": null, render: function (data) {
                    return "<button class='btn btn-default btnview' data-faultid=" + data.FaultID + ">View</button>";
                }
            });
        }
        else if ('@userDetails.RoleID' == "4") {
            columns.push({
                "data": null, render: function (data) {
                    if (data.StatusDescription == "Closed") {
                        return "<button class='btn btn-default btnview' data-faultid=" + data.FaultID + ">View</button>";
                    }
                    else {
                        return "<button class='btn btn-default btnupdate' data-faultid=" + data.FaultID + ">Update</button>";
                    }

                }
            });

            columns.push({
                "data": null, render: function (data) {
                    return "<button class='btn btn-default addcomment' data-faultid=" + data.FaultID + " data-statusid=" + data.StatusID + "></button>";
                }
            });
        }
        else if ('@userDetails.RoleID' == "5" || '@userDetails.RoleID' == "6") {
            columns.push({
                "data": null, render: function (data) {
                        return "<button class='btn btn-default btnview' data-faultid=" + data.FaultID + ">View</button>";
                }
            });
        }
        }



        $("#faultdetailsgrid").DataTable({
            ajax: {
                url: "@Url.Action("GetFaultList","FaultManagement")",
                type: "GET",
                traditional: true,
                data: function (d) {
                    d.status = $("#FilterStatusID").val();
                    return d;
                }
            },
            columns: columns
        });


        $("#btnAddFault").click(function ()
        {
            $.ajax({
                url: '@Url.Action("FaultDetailsView","FaultManagement")',
                type: "GET",
                data: {"faultId":0},
                ContentType: "application/json",
                cache:false,
                success: function (html) {
                    $("#dvupdateaddfault").empty();
                    $("#dvupdateaddfault").html(html);
                    $("#dvupdateaddfault").modal({
                        backdrop: 'static',
                        keyboard: false,
                        show: true
                    });

                },
                error: function () {
                    alert("Error occured while opening the fault details popup");
                }
            });
        });

        $(document).on("click",".btnupdate,.btnview",function () {
            var faultid = $(this).attr("data-faultid");
            $.ajax({
                url: '@Url.Action("FaultDetailsView","FaultManagement")',
                type: "GET",
                data: { "faultId": faultid},
                ContentType: "application/json",
                cache:false,
                success: function (html) {
                    $("#dvupdateaddfault").empty();
                    $("#dvupdateaddfault").html(html);
                    $("#dvupdateaddfault").modal({
                        backdrop: 'static',
                        keyboard: false,
                        show: true
                    });

                },
                error: function () {
                    alert("Error occured while opening the fault details popup");
                }
            });
        });

        $(document).on("click", ".addcomment", function () {
            $.ajax({
                url: '@Url.Action("AddCommentView","FaultManagement")',
                type: "GET",
                data: {"faultId":$(this).attr("data-faultid"),"statusId":$(this).attr("data-statusid")},
                ContentType: "application/json",
                cache:false,
                success: function (html) {
                    $("#dvupdateaddfault").empty();
                    $("#dvupdateaddfault").html(html);
                    $("#dvupdateaddfault").modal({
                        backdrop: 'static',
                        keyboard: false,
                        show: true
                    });

                },
                error: function () {
                    alert("Error occured while opening the fault details popup");
                }
        });
        });
        });
</script>
